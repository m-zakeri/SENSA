{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to SENSA SENSA is a lightweight software entity name recommendation based on source code similarity measures. A majority of source code tokens are identifiers chose by programmers. To achieve high readability and understandability, assigning appropriate names to software entities, including methods, classes, and namespaces, is essential. Our tool provides a set of solutions for recommending good names for entities in the Java program. Currently, we have focused on recommending method names based on source code similarity across projects. ( ) ( )\\ ) ( /( )\\ ) ( (()/( ( )\\())(()/( )\\ /(_)))\\ ((_)\\ /(_))((((_)( (_)) ((_) _((_)(_)) )\\ _ )\\ / __|| __|| \\| |/ __| (_)_\\(_) \\__ \\| _| | .` |\\__ \\ / _ |___/|___||_|\\_||___/ /_/ \\_\\","title":"Home"},{"location":"#welcome-to-sensa","text":"SENSA is a lightweight software entity name recommendation based on source code similarity measures. A majority of source code tokens are identifiers chose by programmers. To achieve high readability and understandability, assigning appropriate names to software entities, including methods, classes, and namespaces, is essential. Our tool provides a set of solutions for recommending good names for entities in the Java program. Currently, we have focused on recommending method names based on source code similarity across projects. ( ) ( )\\ ) ( /( )\\ ) ( (()/( ( )\\())(()/( )\\ /(_)))\\ ((_)\\ /(_))((((_)( (_)) ((_) _((_)(_)) )\\ _ )\\ / __|| __|| \\| |/ __| (_)_\\(_) \\__ \\| _| | .` |\\__ \\ / _ |___/|___||_|\\_||___/ /_/ \\_\\","title":"Welcome to SENSA"},{"location":"benchmarks/","text":"Benchmarks","title":"Benchmarks"},{"location":"benchmarks/#benchmarks","text":"","title":"Benchmarks"},{"location":"datasets/","text":"Dataset Method names and class names data","title":"Datasets"},{"location":"datasets/#dataset","text":"Method names and class names data","title":"Dataset"},{"location":"metrics/","text":"Low-level design metrics","title":"Metrics"},{"location":"metrics/#low-level-design-metrics","text":"","title":"Low-level design metrics"},{"location":"publications/","text":"Publications Parsa, S., Zakeri-Nasrabadi, M., Ekhtiarzadeh, M., & Ramezani, M. (2023). Method name recommendation based on source code metrics. Journal of Computer Languages, 74, 101177. https://doi.org/10.1016/j.cola.2022.101177","title":"Publications"},{"location":"publications/#publications","text":"Parsa, S., Zakeri-Nasrabadi, M., Ekhtiarzadeh, M., & Ramezani, M. (2023). Method name recommendation based on source code metrics. Journal of Computer Languages, 74, 101177. https://doi.org/10.1016/j.cola.2022.101177","title":"Publications"},{"location":"related_projects/","text":"Related projects SENSA is part of Morteza ZAKERI's Ph.D. works. The relevant projects in this series are: ADAFEST : Design and source code testability measurement tool CodART : Design and source code quality improvement tool ARTA : requirement quality measurement tool OpenUnderstand : Low-level program analysis and symbol-table creation tool. QualityMeter : Software design and source code quality measurements toolkit","title":"Related projects"},{"location":"related_projects/#related-projects","text":"SENSA is part of Morteza ZAKERI's Ph.D. works. The relevant projects in this series are: ADAFEST : Design and source code testability measurement tool CodART : Design and source code quality improvement tool ARTA : requirement quality measurement tool OpenUnderstand : Low-level program analysis and symbol-table creation tool. QualityMeter : Software design and source code quality measurements toolkit","title":"Related projects"},{"location":"modules/core/","text":"Name Recommendation","title":"Main"},{"location":"modules/core/#name-recommendation","text":"","title":"Name Recommendation"}]}